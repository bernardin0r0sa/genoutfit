# Database Configuration
datasource.url=${DATABASE_URL}
datasource.username=${DATABASE_USERNAME}
datasource.password=${DATABASE_PASSWORD}
datasource.driver-class-name=${DATABASE_DRIVER}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration
logging.level.org.springframework.boot=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.outfitgenerator=DEBUG

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=email,profile
# JWT Configuration
app.auth.token.secret=${JWT_SECRET}
app.auth.token.expiration-msec=864000000

# CORS Configuration
app.cors.allowed-origins=${ALLOWED_ORIGINS:http://localhost:3000}

# Stripe Configuration
stripe.api.key=${STRIPE_API_KEY}
stripe.product.price.id=${STRIPE_PRICE_ID}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}
stripe.price.trial=${STRIPE_PRICE_ID_TRIAL}
stripe.price.basic=${STRIPE_PRICE_ID_BASIC}
stripe.price.premium=${STRIPE_PRICE_ID_PREMIUM}

# FAL.AI Configuration
fal.api.key=${FAL_API_KEY}
fal.webhook.secret=${FAL_WEBHOOK_SECRET}

# Base URL Configuration
base.url=http://localhost:8080

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=80MB

# Static Resources Configuration
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

# Cloudflare R2 Configuration
r2.access-key-id=${R2_ACCESS_KEY_ID}
r2.secret-access-key=${R2_SECRET_ACCESS_KEY}
r2.endpoint=https://${ACCOUNT_ID}.r2.cloudflarestorage.com
r2.bucket=${R2_BUCKET_NAME}

# Pinecone Configuration
pinecone.api.key=${PINECONE_API_KEY}
pinecone.environment=${PINECONE_ENVIRONMENT}
pinecone.index=${PINECONE_INDEX}

# API Configuration
api.url=${API_URL}
api.webhook.key=${API_WEBHOOK_KEY}

# Server Configuration (uncomment for SSL)
#server.port=8443
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
#server.ssl.key-password=${SSL_KEY_PASSWORD}

# OAuth2 Redirect URIs
app.oauth2.authorized-redirect-uris=${OAUTH_REDIRECT_URI:http://localhost:8080/oauth2/redirect}

# Outfit Generation Configuration
app.generation.max-attempts=${GENERATION_MAX_ATTEMPTS}
app.placeholder-image=${PLACEHOLDER_IMAGE_URL}

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG